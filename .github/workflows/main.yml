name: ci

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  APP_CONTAINER: ${{ vars.APP_CONTAINER || 'typotemplate' }}
  APP_GO_TEST: ${{ vars.APP_GO_TEST || 'false' }}
  
jobs:
  go:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: install golang
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.6'

    - name: build
      run: cd ./app && go build -v

    - name: test and generate coverage.txt
      run: cd ./app && make coverage

    - name: format
      run: if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then exit 1; fi
        
    - name: upload coverage reports to codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: typovrak/typotemplate

  docker:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: build
      run: docker compose build

    - name: scan for secrets with gitleaks
      uses: gitleaks/gitleaks-action@v2

    - name: trivy vulnerability scanner
      uses: aquasecurity/trivy-action@0.28.0
      with:
        image-ref: 'typotemplate-app:latest'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

    - name: analyze image layers efficiency
      run: |
        docker run --rm -v /var/run/docker.sock:/var/run/docker.sock wagoodman/dive:latest typotemplate-app:latest --ci --lowestEfficiency 0.9
        if [ $? -ne 0 ]; then
          echo "dive analysis failed, image efficiency below 90%"
          exit 1
        fi
